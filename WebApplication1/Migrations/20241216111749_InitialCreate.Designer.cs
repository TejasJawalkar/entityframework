// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241216111749_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication1.module.Employee", b =>
                {
                    b.Property<long>("E_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("E_Id"), 1L, 1);

                    b.Property<string>("E_F_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("E_L_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("M_Id")
                        .HasColumnType("bigint");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("E_Id");

                    b.HasIndex("M_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication1.module.EmployeeProject", b =>
                {
                    b.Property<long>("E_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("Projects_Id")
                        .HasColumnType("bigint");

                    b.Property<long>("EP_Id")
                        .HasColumnType("bigint");

                    b.HasKey("E_Id", "Projects_Id", "EP_Id");

                    b.HasIndex("Projects_Id");

                    b.ToTable("EmployeeProjects");
                });

            modelBuilder.Entity("WebApplication1.module.EployeeDetails", b =>
                {
                    b.Property<long>("E_D_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("E_D_Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("E_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("E_D_Id");

                    b.HasIndex("E_Id")
                        .IsUnique();

                    b.ToTable("EployeeDetails");
                });

            modelBuilder.Entity("WebApplication1.module.Manager", b =>
                {
                    b.Property<long>("M_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("M_Id"), 1L, 1);

                    b.Property<string>("M_Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("M_F_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("M_L_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("M_Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("WebApplication1.module.Projects", b =>
                {
                    b.Property<long>("Project_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Project_Id"), 1L, 1);

                    b.Property<string>("PrjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Project_Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebApplication1.module.Employee", b =>
                {
                    b.HasOne("WebApplication1.module.Manager", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("M_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("WebApplication1.module.EmployeeProject", b =>
                {
                    b.HasOne("WebApplication1.module.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("E_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.module.Projects", "Projects")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("Projects_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WebApplication1.module.EployeeDetails", b =>
                {
                    b.HasOne("WebApplication1.module.Employee", "Employee")
                        .WithOne("EployeeDetails")
                        .HasForeignKey("WebApplication1.module.EployeeDetails", "E_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApplication1.module.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");

                    b.Navigation("EployeeDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.module.Manager", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApplication1.module.Projects", b =>
                {
                    b.Navigation("EmployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
